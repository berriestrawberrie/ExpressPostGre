╔════════════════════════════════════════════════════╗
║                CREATE TABLES  	                 ║
╚════════════════════════════════════════════════════╝
CREATE TABLE players (
id INT PRIMARY KEY,
name VARCHAR(50),
join_date DATE
);
CREATE TABLE games (
	id INT PRIMARY KEY,
	title VARCHAR(50),
	genre VARCHAR(25)
);
CREATE TABLE scores (
	id INT PRIMARY KEY,
	player_id INT,
	game_id INT,
	score INT,
	date_played DATE,
	FOREIGN KEY (player_id) REFERENCES players(id),
	FOREIGN KEY (game_id) REFERENCES games(id)
);

╔════════════════════════════════════════════════════╗
║                AI DATA	  	             	     ║
╚════════════════════════════════════════════════════╝
INSERT INTO players (id, name, join_date) VALUES
(1, 'Alice', '2025-01-10'),
(2, 'Bob', '2025-02-15'),
(3, 'Charlie', '2025-03-20'),
(4, 'Diana', '2025-04-05'),
(5, 'Eli', '2025-05-12'),      
(6, 'Faye', '2025-06-18');     

INSERT INTO games (id, title, genre) VALUES
(1, 'Pixel Quest', 'Adventure'),
(2, 'Speed Racer', 'Racing'),
(3, 'Code Clash', 'Puzzle');

INSERT INTO scores (id, player_id, game_id, score, date_played) VALUES
(1, 1, 1, 850, '2025-07-01'),
(2, 1, 2, 920, '2025-07-03'),
(3, 2, 2, 780, '2025-07-04'),
(4, 3, 3, 660, '2025-07-05'),
(5, 4, 1, 990, '2025-07-06'),
(6, 4, 3, 720, '2025-07-07');

╔════════════════════════════════════════════════════╗
║               TOP PLAYERS	  	             	     ║
╚════════════════════════════════════════════════════╝
SELECT 
	players.name , 
	SUM(scores.score) as total_score
FROM players 
JOIN scores ON players.id = scores.player_id
GROUP BY players.name
ORDER BY total_score DESC
LIMIT 3;

╔════════════════════════════════════════════════════╗
║               INACTIVE PLAYERS	  	             ║
╚════════════════════════════════════════════════════╝
SELECT 
	players.name , 
	COUNT(scores.game_id)as games_played
FROM players 
LEFT JOIN scores ON players.id = scores.player_id
GROUP BY players.name
HAVING 
    COUNT(scores.game_id) = 0;

╔════════════════════════════════════════════════════╗
║               POPULAR genre		  	             ║
╚════════════════════════════════════════════════════╝
SELECT 
	games.genre, 
	COUNT(scores.player_id)as num_players
FROM games 
LEFT JOIN scores ON games.id = scores.game_id
GROUP BY games.genre
ORDER BY num_players DESC;

╔════════════════════════════════════════════════════╗
║               JOIN IN LAST 30 DAYS		  	     ║
╚════════════════════════════════════════════════════╝
SELECT 
	id,
	name,
	join_date
FROM players 
WHERE 
    join_date >= CURRENT_DATE - INTERVAL '30 days';